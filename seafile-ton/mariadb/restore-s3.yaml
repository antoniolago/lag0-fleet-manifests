apiVersion: batch/v1
kind: CronJob
metadata:
  name: seafile-db-restore-s3-cronjob
spec:
  schedule: "0 4 * * 0"  # Weekly on Sunday at 4 AM
  suspend: true
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: download-latest-backup
              image: d3fk/s3cmd
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: iam-s3-key
                      key: access-key
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: iam-s3-key
                      key: secret-key
                - name: S3_BUCKET
                  value: "db-backups"
                - name: S3_PATH
                  value: "seafile/daily"
                - name: S3_ENDPOINT
                  value: "https://grkwgmqwtyw9.compat.objectstorage.sa-saopaulo-1.oraclecloud.com"
                - name: S3_REGION
                  value: "sa-saopaulo-1"
              command:
                - /bin/sh
                - -c
                - |
                  set -e
                  # List all backup files and get the latest one
                  
                  LATEST_BACKUP=$(s3cmd --host-bucket=$S3_REGION/$S3_BUCKET --region=$S3_REGION --host=$S3_ENDPOINT ls s3://$S3_BUCKET/$S3_PATH/ | sort -r | head -n 1 | awk '{print $4}')
                  
                  if [ -z "$LATEST_BACKUP" ]; then
                    echo "No backup files found!"
                    exit 1
                  fi
                  
                  echo "Latest backup file: $LATEST_BACKUP"
                  echo $LATEST_BACKUP > /shared/latest_backup_file.txt
                  
                  # Download the latest backup
                  s3cmd --host-bucket=$S3_REGION/$S3_BUCKET --region=$S3_REGION --host=$S3_ENDPOINT get $LATEST_BACKUP /shared/$LATEST_BACKUP
                  
                  echo "Backup downloaded successfully: $LATEST_BACKUP"
              volumeMounts:
                - name: shared-storage
                  mountPath: /shared
          containers:
            - name: restore-database
              image: mariadb:10.11
              env:
                - name: DB_HOST
                  value: "mariadb.seafile.svc.cluster.local"
                - name: DB_PORT
                  value: "3306"
                - name: DB_USER
                  value: "root"
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mysql-db
                      key: root-password
              command:
                - /bin/bash
                - -c
                - |
                  set -e
                  
                  # Wait for the database to be ready
                  echo "Waiting for database to be ready..."
                  until mysql -h $DB_HOST -P $DB_PORT -u $DB_USER -p$DB_PASSWORD -e "SELECT 1" >/dev/null 2>&1; do
                    echo "Database not ready, waiting..."
                    sleep 5
                  done
                  
                  echo "Database is ready, starting restore..."
                  
                  # Get the backup file name
                  BACKUP_FILE=$(cat /shared/latest_backup_file.txt)
                  echo "Restoring from backup: $BACKUP_FILE"
                  
                  # Restore the database
                  mysql -h $DB_HOST -P $DB_PORT -u $DB_USER -p$DB_PASSWORD < /shared/$BACKUP_FILE
                  
                  echo "Database restore completed successfully!"
              volumeMounts:
                - name: shared-storage
                  mountPath: /shared
          restartPolicy: OnFailure
          volumes:
            - name: shared-storage
              emptyDir: {} 