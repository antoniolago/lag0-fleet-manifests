apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: headscale
  namespace: headscale
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: headscale
  values:
    image:
      repository: ghcr.io/juanfont/headscale
      pullPolicy: IfNotPresent
      tag: v0.25.0

    args: ["serve"]

    env:
      HEADSCALE_DNS_BASE_DOMAIN: "headscale.lag0.com.br"
      HEADSCALE_PREFIXES_V4: "100.64.0.0/10"
      HEADSCALE_PREFIXES_V6: "fd7a:115c:a1e0::/48"
      HEADSCALE_DNS_NAMESERVERS_GLOBAL: "1.1.1.1 1.0.0.1"
      HEADSCALE_DNS_MAGIC_DNS: "true"
      HEADSCALE_DERP_URLS: "https://controlplane.tailscale.com/derpmap/default"
      HEADSCALE_DERP_AUTO_UPDATE_ENABLED: "true"
      HEADSCALE_DERP_UPDATE_FREQUENCY: "24h"
      HEADSCALE_EPHEMERAL_NODE_INACTIVITY_TIMEOUT: "30m"

    service:
      main:
        ports:
          http:
            port: 8080
          metrics:
            port: 9090
          grpc:
            enabled: false
            port: 50443

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        hosts:
          - host: headscale.lag0.com.br
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: headscale-tls
            hosts:
              - headscale.lag0.com.br

    configMaps:
      config:
        enabled: true
        data:
          config.yaml: |
            server:
              port: 3000
              host: "0.0.0.0"
            headscale:
              url: "http://localhost:8080"
              apiKey: ""  # You'll need to set this
            kubernetes:
              enabled: true
              namespace: "headscale"
              labelSelector: "app.kubernetes.io/name=headscale"
      acl:
        enabled: false
        data:
          policy: {}
      dns:
        enabled: false
        data:
          records: {}

    persistence:
      config:
        enabled: true
        type: configMap
        name: headscale-config
        mountPath: /etc/headscale
      headplane:
        enabled: true
        mountPath: /var/lib/headplane
        size: 1Gi
        retain: true
        accessMode: ReadWriteOnce

    postgresql:
      enabled: true
      auth:
        database: headscale
        # postgresPassword: changeme
      primary:
        persistence:
          enabled: false
        resources:
          requests:
            cpu: 10m
            memory: 25Mi
          limits:
            cpu: 500m
            memory: 256Mi

    serviceMonitor:
      main:
        enabled: false
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 30s
            scrapeTimeout: 10s

    sidecars:
      headplane:
        image: ghcr.io/tale/headplane:0.6.0
        env:
          - name: HEADPLANE_LOAD_ENV_OVERRIDES
            value: 'true'
          - name: HEADPLANE_INTEGRATION__KUBERNETES__POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          # - name: HEADSCALE_API_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       name: headscale-api-key
          #       key: api-key
        volumeMounts:
          - name: config
            mountPath: /etc/headplane
            readOnly: false
          - name: headplane
            mountPath: /var/lib/headplane
        ports:
          - name: http
            containerPort: 3000
            protocol: TCP
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - ALL

    podSecurityContext:
      shareProcessNamespace: true
      fsGroup: 1000
